import discord
from discord.ext import commands

import random
import json

from __init__ import *



ADMIN_MODE = False # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ +1 –∏ featured –æ–¥–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
ADMIN_MODE_WITH_REACT = True # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ +1 –∏ featured –æ–¥–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∞–∫—Ü–∏–∏.
ADMIN_MODE_REACTION = 'B_application'

DB_DIR = r"light_databases\featured_messages.json"

# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
CHAT_FEATURED_CHANNEL_ID = 1284969133242322986
# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–µ–º—ã
MEME_FEATURED_CHANNEL_ID = 1286279718642913350
# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ—Ä—É–º
FORUM_FEATURED_CHANNEL_ID = 1284968979340726273
# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–æ—Ñ–ª—ã
ROFL_FEATURED_CHANNEL_ID = 1290606254070173717

# ID –∫–∞–Ω–∞–ª–∞ —Å –º–µ–º–∞–º–∏
MEME_CHANNEL_ID = [1156945713440247829, 1171017228683063307]

FEATURED_CHANNELS_IDS = [CHAT_FEATURED_CHANNEL_ID, MEME_FEATURED_CHANNEL_ID, FORUM_FEATURED_CHANNEL_ID, ROFL_FEATURED_CHANNEL_ID]

# –ü–æ—Ä–æ–≥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∞–∫—Ü–∏–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
ADMIN_FORCE = 1
USER_FORCE = 6
PLUS_ONE_FORCE = 5
CURATOR_FORCE = 1
MEME_CURATOR_FORCE = 2
CANCEL_FORCE = 1

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
FORUMS = 1180846730602889236
NOTCHATS = [1156902879530070107, 1221874671352545320, 1156945170969931847, 1273188151786995712]

# –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
ADMIN_EMOJI = 'AA_admin_featured'
SUPER_EMOJI = 'AA_super_featured'
USER_EMOJI = 'AA_featured'
PLUS_ONE_EMOJI = 'AA_plus_one'
PROTECTED_EMOJI = 'üõ°Ô∏è'
CANCEL_EMOJI = '‚ùå'

CURATOR_ROLE_ID = 1288527764319637578
MEME_CURATOR_ROLE_ID = 1288528393830404136 


# –¶–≤–µ—Ç–∞ –¥–ª—è —ç–º–±–µ–¥–æ–≤
ADMIN_COLOR = discord.Color.red()
SUPER_COLOR = discord.Color.green()
USER_COLOR = discord.Color.yellow()
PLUS_ONE_COLOR = discord.Color.blue()

class ReactionsCog(commands.Cog):
    def __init__(self, bot):
        self.bot: discord.Client = bot
        self.destination = None  # –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (—á–∞—Ç –∏–ª–∏ —Ñ–æ—Ä—É–º)
        self.status = None  # –°—Ç–∞—Ç—É—Å —Ä–µ–∞–∫—Ü–∏–∏ (–∞–¥–º–∏–Ω—Å–∫–∞—è –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è)
        
        
    def check_for_featured(self, message: discord.Message):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        with open(DB_DIR, "r") as f:
            featured_messages = json.load(f)
        return message.id in featured_messages
    
    def check_for_admin(self, member: discord.Member):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        return member.guild_permissions.administrator
    
    def check_for_curator(self, member: discord.Member):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–æ–º
        return CURATOR_ROLE_ID in [role.id for role in member.roles]
    
    def check_for_meme_curator(self, member: discord.Member):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–æ–º –º–µ–º–æ–≤
        return MEME_CURATOR_ROLE_ID in [role.id for role in member.roles]
    
    def add_to_featured_file(self, message: discord.Message):
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            with open(DB_DIR, "r") as f:
                content = f.read()
                featured_messages = json.loads(content) if content else []
        except (FileNotFoundError, json.JSONDecodeError):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
            featured_messages = []

        # –î–æ–±–∞–≤–ª—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –µ—â–µ –Ω–µ—Ç
        if message.id not in featured_messages:
            featured_messages.append(message.id)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Ñ–∞–π–ª
        with open(DB_DIR, "w") as f:
            json.dump(featured_messages, f, indent=4)
            
    def remove_from_featured_file(self, message: discord.Message):
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
        with open(DB_DIR, "r") as f:
            featured_messages = json.load(f)
        
        # –£–¥–∞–ª—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞
        try:
            featured_messages.remove(message.id)
        except:
            error(f"REMOVE_FROM_F_FILE: Message with ID {message.id} was not found in featured messages")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Ñ–∞–π–ª
        with open(DB_DIR, "w") as f:
            json.dump(featured_messages, f, indent=4)
            
    def check_for_admin_mode(self, message: discord.Message):
        if message.reactions and ADMIN_MODE_WITH_REACT:
            names_list = []
            # –°–æ–±–∏—Ä–∞–µ–º –∏–º–µ–Ω–∞ –≤—Å–µ—Ö —ç–º–æ–¥–∑–∏ –≤ —Ä–µ–∞–∫—Ü–∏—è—Ö
            for reaction in message.reactions:
                for i in range(reaction.count):
                    names_list.append(reaction.emoji.name) if type(reaction.emoji) is not str else None
            state = False
            for reaction_name in names_list:
                if reaction_name == ADMIN_MODE_REACTION:
                    state = True
            if state:
                return True
            else:
                return ADMIN_MODE
    async def check_for_protected(self, message: discord.Message):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—â–∏—â–µ–Ω–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
        name_list = [reaction.emoji for reaction in message.reactions]
        if PROTECTED_EMOJI in name_list:
            return True in [self.check_for_admin(user) async for user in message.reactions[name_list.index(PROTECTED_EMOJI)].users()]
    
    @commands.command()
    async def to_rofl(self, ctx: commands.Context, *args: str):
        if not ctx.author.guild_permissions.administrator or not ctx.guild.get_role(CURATOR_ROLE_ID) in ctx.author.roles:
            await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return
        
        await self.add_to_featured(ctx, *args, rofl=True)
        
    
    @commands.command()
    async def atf(self, ctx: commands.Context, *args: str):
        await self.add_to_featured(ctx, *args)
        
    @commands.command()
    async def add_to_featured(self, ctx: commands.Context, *args: str, rofl: bool = False):
        if not ctx.author.guild_permissions.administrator:
            await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return

        # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç - —ç—Ç–æ —Å—Ç–∞—Ç—É—Å (—Ç–∏–ø —Ä–µ–∞–∫—Ü–∏–∏)
        status = args[-1]
        if len(args) > 1:
            message_urls = args[:-1]  # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã - —ç—Ç–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        else:
            message_urls = [ctx.message.reference.resolved.jump_url]
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
        status = status.split(':')[1].replace(':', '') 

        if status == USER_EMOJI:
            status = 'user'
        elif status == ADMIN_EMOJI:
            status = 'admin'
        elif status == SUPER_EMOJI:
            status = 'super'
        elif status == PLUS_ONE_EMOJI:
            status = 'plus_one'

        successful_ids = []
        failed_ids = []

        for message_url in message_urls:
            try:
                channel_id = int(message_url.split('/')[-2].replace('/', ''))
                channel = bot.get_channel(channel_id)
                message_id = int(message_url.split('/')[-1])
                message: discord.Message = await channel.fetch_message(message_id)

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                if message.channel.id in MEME_CHANNEL_ID:
                    destination = 'meme'
                elif message.channel.category_id == FORUMS:
                    destination = 'forum'
                elif message.channel.category_id not in NOTCHATS:
                    destination = 'chat'
                elif message.channel.id in FEATURED_CHANNELS_IDS:
                    destination = 'chat'
                elif rofl:
                    destination = 'chat'
                else:
                    failed_ids.append(message_id)
                    continue

                if not self.check_for_featured(message):
                    await self.send_to(destination, message, status, rofl)
                    successful_ids.append(message_id)
                else:
                    self.remove_from_featured_file(message)
                    await self.send_to(destination, message, status, rofl)
                    successful_ids.append(message_id)

            except Exception as e:
                error(f"Cannot add message with ID {message_id} to featured messages:", e)
                failed_ids.append(message_id)
                continue

        if successful_ids:
            await ctx.send(f"**–°–æ–æ–±—â–µ–Ω–∏—è —Å ID {', '.join(map(str, successful_ids))} –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ**")
            info(f"Messages with IDs {', '.join(map(str, successful_ids))} were added to featured messages")
        
        if failed_ids:
            await ctx.send(f"**–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID {', '.join(map(str, failed_ids))} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ**")
            error(f"Messages with IDs {', '.join(map(str, failed_ids))} were not added to featured messages")


                
    async def send_to(self, destination: str, message: discord.Message, status: str, rofl: bool = False):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        destination = 'meme' if rofl else destination
        if destination != 'meme':
            sub_title = "–≤ —á–∞—Ç–µ" if destination == "chat" else "–Ω–∞ —Ñ–æ—Ä—É–º–µ"
            match status:
                case 'user':
                    title = f"–ò–∑–±—Ä–∞–Ω–Ω–æ–µ {sub_title}"
                    content = f"<:AA_featured:1284934932413550612>"
                    color=USER_COLOR
                case 'admin':
                    title = f"–ò–∑–±—Ä–∞–Ω–Ω–æ–µ –∞–¥–º–∏–Ω–∞–º–∏ {sub_title}"
                    content = f"<:AA_admin_featured:1284934964445577308>"
                    color=ADMIN_COLOR
                case 'super':
                    title = f"–£–õ–¨–¢–†–ê–ë–ê–ó–ê (—á–∞—Ç)" if destination == 'chat' else "–£–õ–¨–¢–†–ê–ë–ê–ó–ê (—Ñ–æ—Ä—É–º)"
                    content = f"<:AA_super_featured:1285255719398019284>"
                    color=SUPER_COLOR
                case 'plus_one':
                    title = f"–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ –º–Ω–µ–Ω–∏–µ {sub_title}"
                    content = f"<:AA_plus_one:1171921902017712290>"
                    color=PLUS_ONE_COLOR
        else:
            match status:
                case 'user':
                    title = f"–†–ê–ó–†–´–í–ù–ê–Ø"
                    content = f"<:AA_featured:1284934932413550612>"
                    color=USER_COLOR
                case 'admin':
                    title = f"–í—ã —Ä–∞—Å—Å–º–µ—à–∏–ª–∏ –∞–¥–º–∏–Ω–∞"
                    content = f"<:AA_admin_featured:1284934964445577308>"
                    color=ADMIN_COLOR
                case 'super':
                    title = f"–ê–•–ê–•–•–ê–•–ê–•–ê–•–ê–•–ê–•–ê–•–•–ê–•–ê–•–ê–•–ê–•–ê–•–ê–•–•–ê–•–ê–•–ê–•–ê–•–ê–•–ê–•–•–ê–•"
                    content = f"<:AA_super_featured:1285255719398019284>"
                    color=SUPER_COLOR
                case 'plus_one':
                    title = f"–ñ–ò–ó–ê –ñ–ò–ó–ù–ï–ù–ù–ê–Ø"
                    content = f"<:AA_plus_one:1171921902017712290>"
                    color=PLUS_ONE_COLOR
                    
        if message.content:
            # Check if the content is a single link
            if message.content.strip().startswith("http") and len(message.content.strip().split()) == 1:
                embed=None; content=f"# {content}\n{message.content if message.content else ''}\n-# [–í–∏–¥–µ–æ]({message.content})\n-# –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message.jump_url}"
            else:
                embed = discord.Embed(
                    title=title,
                    description=f"{message.content}\n\n\n**–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.jump_url}**",
                    color=color,
                ).set_author(name=message.author.display_name)
        else:
            embed = discord.Embed(
            title=title,
            description=f"**–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.jump_url}**",
            color=color,
            ).set_author(name=message.author.display_name, url=message.author.avatar.url)
        
        if message.attachments:
            if not all([tt == -1 for tt in [message.attachments[0].url.find(t) for t in ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.webp']]]):
                embed.set_image(url=message.attachments[0].url)
            elif message.attachments[0].url.find('mp4') != -1 or message.attachments[0].url.find('mov') != -1:
                embed=None; content=f"# {content}\n{message.content if message.content else ''}\n-# [–í–∏–¥–µ–æ]({message.attachments[0].url})\n-# –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message.jump_url}"
            else:
                embed.add_field(name="–í–ª–æ–∂–µ–Ω–∏–µ", value=f"[–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–ª–æ–∂–µ–Ω–∏–µ]({message.attachments[0].url})")
        
        if rofl:
            # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ä–æ—Ñ–ª—ã
            channel = self.bot.get_channel(ROFL_FEATURED_CHANNEL_ID)
            await channel.send(embed=embed, content=content)
            info(f"Message with ID {message.id} was sent to rofl featured messages")
        elif destination == 'forum':
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ–æ—Ä—É–º
            channel = self.bot.get_channel(FORUM_FEATURED_CHANNEL_ID)
            await channel.send(embed=embed, content=content)
            info(f"Message with ID {message.id} was sent to forum featured messages")
        elif destination == 'chat':
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç
            channel = self.bot.get_channel(CHAT_FEATURED_CHANNEL_ID)
            await channel.send(embed=embed, content=content)
            info(f"Message with ID {message.id} was sent to chat featured messages")
        elif destination == 'meme':
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–µ–º—ã
            channel = self.bot.get_channel(MEME_FEATURED_CHANNEL_ID)
            await channel.send(embed=embed, content=content)
            info(f"Message with ID {message.id} was sent to meme featured messages")
        
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        if not self.check_for_featured(message):
            self.add_to_featured_file(message)
    
    @commands.Cog.listener()
    async def on_ready(self):
        # –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
        info("Reactions cog is ready")
    
    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload: discord.RawReactionActionEvent):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏
        channel = self.bot.get_channel(payload.channel_id)
        message = await channel.fetch_message(payload.message_id)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–∞–∫—Ü–∏–∏ (–∞–¥–º–∏–Ω—Å–∫–∞—è –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è)
        if payload.emoji.name == USER_EMOJI:
            self.status = 'user'
        elif payload.emoji.name == ADMIN_EMOJI:
            self.status = 'admin'
        elif payload.emoji.name == SUPER_EMOJI:
            self.status = 'super'
        elif payload.emoji.name == PLUS_ONE_EMOJI:
            self.status = 'plus_one'
        elif payload.emoji.name == CANCEL_EMOJI:
            self.status = 'cancel'
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        if channel.id in [CHAT_FEATURED_CHANNEL_ID, FORUM_FEATURED_CHANNEL_ID]:
            self.destination = 'delete_forum_or_chat'
        elif channel.id in MEME_CHANNEL_ID:
            self.destination = 'meme'
        elif channel.category_id == FORUMS:
            self.destination = 'forum'
        elif channel.id == MEME_FEATURED_CHANNEL_ID:
            self.destination = 'delete_meme'
        elif channel.category_id not in NOTCHATS:
            self.destination = 'chat'
            
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
        if not self.check_for_featured(message) or message.channel.id in FEATURED_CHANNELS_IDS:
            if self.destination:
                names_list = []
                # –°–æ–±–∏—Ä–∞–µ–º –∏–º–µ–Ω–∞ –≤—Å–µ—Ö —ç–º–æ–¥–∑–∏ –≤ —Ä–µ–∞–∫—Ü–∏—è—Ö
                for reaction in message.reactions:
                    for i in range(reaction.count):
                        names_list.append(reaction.emoji.name) if type(reaction.emoji) is not str else None
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ä–µ–∞–∫—Ü–∏–∏
                
                ADMIN_CHECK = ((names_list.count(ADMIN_EMOJI) >= ADMIN_FORCE and self.check_for_admin(payload.member) 
                or names_list.count(ADMIN_EMOJI) >= CURATOR_FORCE and self.check_for_curator(payload.member) and self.destination != 'meme'
                or names_list.count(ADMIN_EMOJI) >= MEME_CURATOR_FORCE and self.check_for_meme_curator(payload.member) and self.destination == 'meme')
                and self.status == 'admin')
                
                CANCEL_CHECK = (self.status == 'cancel' and not await self.check_for_protected(message)
                               and (self.check_for_admin(payload.member) and self.destination in ['delete_forum_or_chat', 'delete_meme']
                               or self.check_for_curator(payload.member) and self.destination == 'delete_forum_or_chat' and names_list.count(CANCEL_EMOJI) >= CANCEL_FORCE
                               or self.check_for_meme_curator(payload.member) and self.destination == 'delete_meme' and names_list.count(CANCEL_EMOJI) >= CANCEL_FORCE))
                
                if self.status == 'user' and names_list.count(USER_EMOJI) >= USER_FORCE or self.check_for_admin(payload.member) and self.check_for_admin_mode(message) and self.status == 'user':
                    await self.send_to(self.destination, message, self.status)
                    info(f"Message with ID {message.id} was added to featured messages")
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π —Ä–µ–∞–∫—Ü–∏–∏
                elif ADMIN_CHECK:
                    await self.send_to(self.destination, message, self.status)
                    info(f"Message with ID {message.id} was added to admin featured messages")
                elif self.status == 'super' and names_list.count(SUPER_EMOJI) >= ADMIN_FORCE and self.check_for_admin(payload.member):
                    await self.send_to(self.destination, message, self.status)
                    info(f"Message with ID {message.id} was added to super featured messages")
                elif self.status == 'plus_one' and names_list.count(PLUS_ONE_EMOJI) >= PLUS_ONE_FORCE or self.check_for_admin(payload.member) and self.check_for_admin_mode(message) and self.status == 'plus_one':
                    await self.send_to(self.destination, message, self.status)
                    info(f"Message with ID {message.id} was added to plus one messages")     
                elif CANCEL_CHECK:
                    self.remove_from_featured_file(message)
                    await message.delete()
                    info(f"Message with ID {message.id} was removed from featured messages")
        self.status = None
        self.destination = None

async def setup(bot):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–≥ –≤ –±–æ—Ç–∞
    await bot.add_cog(ReactionsCog(bot))