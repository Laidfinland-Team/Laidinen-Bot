import random
from datetime import timedelta

from __init__ import *

TIMEOUT = 20 ## –í—Ä–µ–º—è —Ç–∞–π–º–∞—É—Ç–∞ –∫–Ω–æ–ø–æ–∫
MUTE = timedelta(minutes=15) # –í—Ä–µ–º—è –º—É—Ç–∞ –ø–æ—Å–ª–µ —Å–º–µ—Ä—Ç–∏
DIED_CHANCE = 5 # –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –¥–µ–ª–∏—Ç–µ–ª—å => 1 / DIED_CHANCE ## –®–∞–Ω—Å —É–º–µ—Ä–µ—Ç—å

class Russian_roulette(discord.ui.View):
    success_messages = ["–°–µ–≥–æ–¥–Ω—è —Ç–µ–±–µ –≤–µ–∑—ë—Ç :)", "–¢—ã –≤—ã–∂–∏–ª", "–¢—ã –ø–æ–±–µ–¥–∏–ª", "**–£–¥–∞—á–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞**", "–°—Ö–æ–¥–∏ –≤ –ª–æ—Ç–µ—Ä–µ—é, —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å", "—É —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è üåπ"] ## –°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –æ—Å–µ—á–∫–µ
    failure_messages = ["–ë–£–ú –∏ —Ç—ã –æ—Ç–ª–µ—Ç–∞–µ—à—å!", "**YOU DIED**", "–ü–æ–∫–∞-–ø–æ–∫–∞!)", "–î–∞ —Ç—ã —Å–Ω–∞–π–ø–µ—Ä! –¢–æ—á–Ω–æ –≤ —Ü–µ–ª—å)", "–ù—É, –≤ –ª—é–±–≤–∏ —É–∂–µ –Ω–µ –ø–æ–≤–µ–∑—ë—Ç"] ## –°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –≤—ã—Å—Ç—Ä–µ–ª–µ
    
    ## –≠–º–±–µ–¥—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –æ—Å–µ—á–∫–µ
    success_embed = discord.Embed(
        title="–ü–£–°–¢–û",  
        color=discord.Color.lighter_grey()
        )
    
    ## –≠–º–±–µ–¥—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –≤—ã—Å—Ç—Ä–µ–ª–µ
    failure_embed = discord.Embed(
        title="–í–´–°–¢–†–ï–õ!!!",  
        color=discord.Color.red()
        )
    
    def __init__(self, ctx):
        super().__init__(timeout=TIMEOUT)
        self.value = None
        self.died = False
        self.ctx: Ctx = ctx
        
    async def interaction_check(self, interaction: discord.Interaction):
        return interaction.user.id == self.ctx.message.author.id

    @discord.ui.button(label='–°–ø—É—Å–∫', style=discord.ButtonStyle.red)
    async def shoot(self, interaction: discord.Interaction, button: discord.ui.Button):
        '''! shoot - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–°–ø—É—Å–∫"'''
        
        if not await Russian_roulette.interaction_check(self, interaction):
            return
                
        if random.randint(0, DIED_CHANCE):
            await self.ctx.send(Russian_roulette.success_messages[random.randint(0, len(Russian_roulette.success_messages)) - 1])
            await interaction.message.edit(embed=Russian_roulette.success_embed)
            self.died = False
        else:
            await self.ctx.send(Russian_roulette.failure_messages[random.randint(0, len(Russian_roulette.failure_messages) ) - 1])
            await interaction.message.edit(embed=Russian_roulette.failure_embed)
            self.died = True
        self.value = True
        await interaction.message.edit(view=None)
        self.stop()
        
    @discord.ui.button(label='–ó–∞—Å—Å–∞–ª', style=discord.ButtonStyle.gray)
    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
        
        '''! cancel - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–∞—Å—Å–∞–ª"'''
        self.value = False
        await self.ctx.message.delete()
    
        await interaction.message.delete()
        self.stop()
        
class Rock_paper_scissors(discord.ui.View):
    
    embed = discord.Embed(
        title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
        description="–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
        color=discord.Color.yellow()
    )
    
    def __init__(self, ctx):
        super().__init__(timeout=TIMEOUT)
        self.ctx = ctx
        self.players: list[discord.Member] = []
        self.winner = None
    
    async def interaction_check(self, interaction: discord.Interaction):
        return True#interaction.user.id == self.ctx.message.author.id
    
    async def end_of_game(self, interaction: discord.Interaction):
        if len(self.players) >= 2:
            player1, player2 = self.players
            if player1[1] == player2[1]:
                self.winner ="–ù–∏—á—å—è"
                
            elif player1[1] == "rock" and player2[1] == "scissors":
                self.winner = f"**<@{player1[0].id}> –ø–æ–±–µ–¥–∏–ª <@{player2[0].id}>!**\n-# **–ö–∞–º–µ–Ω—å** –æ—Ç–º—É–¥–æ—Ö–∞–ª **–Ω–æ–∂–Ω–∏—Ü—ã**"
            elif player1[1] == "scissors" and player2[1] == "paper":
                self.winner = f"**<@{player1[0].id}> –ø–æ–±–µ–¥–∏–ª <@{player2[0].id}>!**\n-# **–ù–æ–∂–Ω–∏—Ü—ã** –ø–æ—á–∏–∫–∞–ª–∏ **–±—É–º–∞–≥—É**"
            elif player1[1] == "paper" and player2[1] == "rock":
                self.winner = f"**<@{player1[0].id}> –ø–æ–±–µ–¥–∏–ª <@{player2[0].id}>!**\n-# **–ë—É–º–∞–≥–∞** —Å—Ö–∞–≤–∞–ª–∞ **–∫–∞–º–µ–Ω—å**"
                
            elif player2[1] == "rock" and player1[1] == "scissors":
                self.winner = f"**<@{player2[0].id}> –ø–æ–±–µ–¥–∏–ª <@{player1[0].id}>!**\n-# **–ö–∞–º–µ–Ω—å** –æ—Ç–º—É–¥–æ—Ö–∞–ª **–Ω–æ–∂–Ω–∏—Ü—ã**"
            elif player2[1] == "scissors" and player1[1] == "paper":
                self.winner = f"**<@{player2[0].id}> –ø–æ–±–µ–¥–∏–ª <@{player1[0].id}>!**\n-# **–ù–æ–∂–Ω–∏—Ü—ã** –ø–æ—á–∏–∫–∞–ª–∏ **–±—É–º–∞–≥—É**"
            elif player2[1] == "paper" and player1[1] == "rock":
                self.winner = f"**<@{player2[0].id}> –ø–æ–±–µ–¥–∏–ª <@{player1[0].id}>!**\n-# **–ë—É–º–∞–≥–∞** —Å—Ö–∞–≤–∞–ª–∞ **–∫–∞–º–µ–Ω—å**"
            
            self.embed.description = f"**–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!**\n{self.winner}"
            await interaction.message.edit(embed=self.embed, view=None)
            self.stop()

    @discord.ui.button(label='üß±', style=discord.ButtonStyle.primary)
    async def rock(self, interaction: discord.Interaction, button: discord.ui.Button):
        
        '''! rock - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö–∞–º–µ–Ω—å"'''
        if not interaction.user in [player[0] for player in self.players]:
            self.players.append((interaction.user, "rock"))
        await self.end_of_game(interaction)
        await interaction.response.defer()
        
    @discord.ui.button(label='‚úÇ', style=discord.ButtonStyle.primary)
    async def scissors(self, interaction: discord.Interaction, button: discord.ui.Button):
        
        '''! scissors - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–æ–∂–Ω–∏—Ü—ã"'''
        if not interaction.user in [player[0] for player in self.players]:
            self.players.append((interaction.user, "scissors"))
        await self.end_of_game(interaction)
        await interaction.response.defer()
        
    @discord.ui.button(label='üì∞', style=discord.ButtonStyle.primary)
    async def paper(self, interaction: discord.Interaction, button: discord.ui.Button):
        
        '''! paper - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ë—É–º–∞–≥–∞"'''
        if not interaction.user in [player[0] for player in self.players]:
            self.players.append((interaction.user, "paper"))
        await self.end_of_game(interaction)
        await interaction.response.defer()

class GamesCog(commands.Cog, name="Games"):
    
    """! GamesCog - –ö–æ–≥ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –∏–≥—Ä—ã"""

    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        
        """! –°–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–≥–∞"""
        
        info("GamesCog cog is ready")
        
        
    @commands.command(brief="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
    async def rps(self, ctx: Ctx):
        await self.rock_paper_scissors(ctx)
            
    @commands.command(brief="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
    async def rock_paper_scissors(self, ctx: Ctx):
        view = Rock_paper_scissors(ctx)
        ctx: discord.Message = await ctx.send(embed=view.embed, view=view)
        
        await view.wait()
        embed = discord.Embed(title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞", description="**–°–æ–ø–µ—Ä–Ω–∏–∫ —É–±–µ–∂–∞–ª...**", color=discord.Color.dark_gray())
        if view.winner is None:
            await ctx.edit(embed=embed, view=None)
        
    
    
    @commands.command(brief="–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞")
    async def rr(self, ctx: Ctx, member: discord.Member = None):
        await self.russian_roulette(ctx, member)

    @commands.command(brief="–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞")
    async def russian_roulette(self, ctx: Ctx, member: discord.Member = None):
        
        """! –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–≥—Ä—ã –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É"""
        
        if member:
            embed = discord.Embed(title=f"–¢–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ –†—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É", description=f"–ß—Ç–æ –±—ã —Å—ã–≥—Ä–∞—Ç—å –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É `{PREFIX}russian_roulette`\n–£ —Ç–µ–±—è –ª–∏—à—å –æ–¥–Ω–∞ –∂–∏–∑–Ω—å.\n–ï—Å–ª–∏ –ø–æ–≥–∏–±–Ω–µ—à—å –ø–æ–ª—É—á–∏—à—å –º—É—Ç –Ω–∞ {MUTE} –º–∏–Ω—É—Ç", color=discord.Color.red())
            embed.set_footer(text=f"–ò–≥—Ä–∞ —Å {ctx.message.author.name}")
            
            await ctx.send(content=f"<@{member.id}>", embed=embed)
            await ctx.send( content=f"https://media1.tenor.com/m/lm8iTuh1lRIAAAAd/gun-weapon.gif")
        
        else:
            embed = discord.Embed(title="–†—É—Å—Å–∫–∞—è –†—É–ª–µ—Ç–∫–∞", description=f"–£ —Ç–µ–±—è –ª–∏—à—å –æ–¥–Ω–∞ –∂–∏–∑–Ω—å.\n–ï—Å–ª–∏ –ø–æ–≥–∏–±–Ω–µ—à—å –ø–æ–ª—É—á–∏—à—å –º—É—Ç –Ω–∞ {MUTE} –º–∏–Ω—É—Ç", color=discord.Color.red())
            
            view = Russian_roulette(ctx)
            
            await ctx.send(embed=embed, view=view)
            await view.wait()
            
            if view.value is None:
                info(ctx.channel.name + ': Russian Roulette: Timed out')
                await ctx.send('–í—Ä–µ–º—è –≤—ã—à–ª–æ —Å–æ—Å—É–Ω–æ–∫...')
                
            elif view.value:
                info(ctx.channel.name + ': Russian Roulette:  Russian_rouletteed')
                    
            else:
                info(ctx.channel.name + ': Russian Roulette:  Cancelled')
                
            if view.died:
                try:
                    await ctx.author.timeout(MUTE)
                    info(ctx.channel.name + ': Russian Roulette:  Muted')
                except Exception as e:
                        error(f"Timeout error: {e}")

async def setup(bot):
    await bot.add_cog(GamesCog(bot))