import tkinter as tk
import asyncio
import threading
import pyperclip # –î–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (–∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –≤—Å—Ç–∞–≤–∫–æ–π)

from __init__ import *

CHANNEL_ID = 1156941990672466020 # id –∫–∞–Ω–∞–ª–∞ "„Äéüåê„Äè–æ—Å–Ω–æ–≤–Ω–æ–π"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
def run_tk():
    #text_selected = tk.Text()  # Define text_selected

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
    def on_button_click():
        try:
            channel_id = int(entry.get()) if entry.get() else CHANNEL_ID  # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞

            asyncio.run_coroutine_threadsafe(MyBot.message(channel_id, text.get(1.0, tk.END)), loop)
        except Exception as e:
            error(f"Send error click: {e}")
        
    root = tk.Tk()  # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
    
    root.bind('<Control-v>', lambda event: text_selected.insert(tk.END, pyperclip.paste()))
    
    root.title("Message from bot")  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
    root.geometry("400x400")  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞

    label = tk.Label(root, text="ID")
    label.pack(pady=1, padx=10)
    entry = tk.Entry(root, width=50) # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
    entry.pack(pady=10, padx=10)

    paste_entry_button = tk.Button(root, text="–í—Å—Ç–∞–≤–∏—Ç—å", command=lambda: entry.insert(tk.END, pyperclip.paste()))  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–í—Å—Ç–∞–≤–∏—Ç—å" –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞
    paste_entry_button.pack(pady=5,padx=10)


    label = tk.Label(root, text="Message")
    label.pack(pady=1, padx=10)
    
    button = tk.Button(root, text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å", command=on_button_click)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
    button.pack(pady=10)

    text = tk.Text(root, width=50, height=10, bd=2) # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
    text.pack(pady=10, padx=10)

    paste_text_button = tk.Button(root, text="–í—Å—Ç–∞–≤–∏—Ç—å", command=lambda: text.insert(tk.END, pyperclip.paste()))  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–í—Å—Ç–∞–≤–∏—Ç—å" –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
    paste_text_button.pack(pady=5,padx=10) 
    
    root.mainloop()  # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
async def tk_main():
    global loop
    loop = asyncio.get_running_loop()
    
    if threading.current_thread().is_alive():
        threading.Thread(target=run_tk, daemon=True).start()

class MyBot():
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Discord
    @bot.event
    async def on_connect():
        print(f'{Fore.YELLOW}{Style.BRIGHT}=========================')
        print(f'Connection to discord.com')
        print(f'Token: {hide(TOKEN)}')
        print(f'ID: {bot.user.id}')
        print('Prefix:' + PREFIX)
        print(f'{Fore.YELLOW}{Style.BRIGHT}=========================')

        await bot.change_presence(status=discord.Status.idle, activity=discord.Game(name="Zzzzzz..."))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –±–æ—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º—É Discord
    @bot.event
    async def on_ready():
        print(f'{Fore.GREEN}{Style.BRIGHT}=========================')
        print(f'Bot logged in as - ')
        print(f'Username: {bot.user.name}')
        print(f'ID: {bot.user.id}')
        print(f'{Fore.GREEN}{Style.BRIGHT}=========================')
        print("Bot connected")
        print(Style.BRIGHT + "\n\nLogs:\n")

        activity = discord.Activity(type=discord.ActivityType.watching, name="–≤–∏–¥–µ–æ –æ—Ç Laidfin")
        await bot.change_presence(status=discord.Status.online, activity=activity)

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
    async def message(id, message):
        try:
            channel = bot.get_channel(id)
            output(channel, message)
            await channel.send(message)
        except Exception as e:
            error(f"Send error: {e}")

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    async def start():
        await bot.start(TOKEN)

async def main():
    await tk_main()
    await MyBot.start()

asyncio.run(main())
