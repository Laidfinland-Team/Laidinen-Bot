Metadata-Version: 2.1
Name: inexactsearch
Version: 1.0.2
Summary: Fuzzy String search algorithm using Soundex for Indian language
Home-page: https://github.com/Project-SILPA/inexactsearch
Author: SILPA Developers
Author-email: silpa-discuss@nongnu.org
License: LGPL-2.1+
Classifier: Development Status :: 4 - Beta
Classifier: License :: DFSG approved
Classifier: License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Programming Language :: Python
Requires-Python: >=2.7
License-File: AUTHORS
Requires-Dist: soundex >=1.0
Requires-Dist: silpa-common >=0.3

Approximate String Search
###########################

.. image::
   https://travis-ci.org/Project-SILPA/inexactsearch.svg?branch=master
   :target: https://travis-ci.org/Project-SILPA/inexactsearch

	    
.. image::
   https://coveralls.io/repos/Project-SILPA/inexactsearch/badge.png?branch=master
  :target: https://coveralls.io/r/Project-SILPA/inexactsearch?branch=master


This is a `Fuzzy string search
<http://en.wikipedia.org/wiki/Fuzzy_string_searching>`_
application. This application illustrates the combined use of `Edit
distance <http://en.wikipedia.org/wiki/Levenshtein_distance>`_ and
`Indic Soundex <http://silpa.org.in/Soundex>`_ algorithm.

By mixing both written like(edit distance) and sounds like(soundex),
we achieve an efficient aproximate string searching. This application
is capable of cross language string search too. That means, you can
search Hindi words in Malayalam text. If there is any Malayalam word,
which is approximate transliteration of hindi word, or sounds alike
the hindi words, it will be returned as an approximate match. The
"written like" algorithm used here is a bigram average algorithm.  The
ratio of common bigrams in two strings and average number of bigrams
will give a factor which is greater than zero and less
than 1. Similarly the soundex algorithm also gives a weight. By
selecting words which has comparison weight more than the threshold
weight(which 0.6), we get the search results.

